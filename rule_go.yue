-- example rule for go, without needing to use xmake's builtin dep handling.
-- if you use `go mod`, this is for you.
-- obviously this does not benefit from xmake's other builtins, but that's life
macro raw = (code) ->
  { :code, type: "lua" }

rule "custgolang"
do
  set_extensions ".go"
  on_link () -> nil
  on_build_file (target, files, opt) ->
    $raw[[
      import("core.project.depend")
      import("utils.progress")
    ]]
    os.mkdir target\targetdir!

    relp = path.join target\targetdir!, (path.basename target\name!)
    if target\is_plat "windows"
      relp ..= ".exe"

    depend.on_changed (() ->
      os.vrunv "go", { "build", "-v", "-o", relp, target\name! }
    ), { dependfile: (target\dependfile relp), files: files, always_changed: false }

--[[
example use, with a go.mod pkg of `coolpkg`:

target "coolpkg/cmd/thing"
do
  set_kind "binary"
  add_rules "custgolang"
  add_files "cmd/thing/*.go"
]]
